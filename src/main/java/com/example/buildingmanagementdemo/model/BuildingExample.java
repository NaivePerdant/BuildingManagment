package com.example.buildingmanagementdemo.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BuildingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public BuildingExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andCampusIsNull() {
            addCriterion("campus is null");
            return (Criteria) this;
        }

        public Criteria andCampusIsNotNull() {
            addCriterion("campus is not null");
            return (Criteria) this;
        }

        public Criteria andCampusEqualTo(String value) {
            addCriterion("campus =", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotEqualTo(String value) {
            addCriterion("campus <>", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusGreaterThan(String value) {
            addCriterion("campus >", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusGreaterThanOrEqualTo(String value) {
            addCriterion("campus >=", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusLessThan(String value) {
            addCriterion("campus <", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusLessThanOrEqualTo(String value) {
            addCriterion("campus <=", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusLike(String value) {
            addCriterion("campus like", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotLike(String value) {
            addCriterion("campus not like", value, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusIn(List<String> values) {
            addCriterion("campus in", values, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotIn(List<String> values) {
            addCriterion("campus not in", values, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusBetween(String value1, String value2) {
            addCriterion("campus between", value1, value2, "campus");
            return (Criteria) this;
        }

        public Criteria andCampusNotBetween(String value1, String value2) {
            addCriterion("campus not between", value1, value2, "campus");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoIsNull() {
            addCriterion("property_cert_no is null");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoIsNotNull() {
            addCriterion("property_cert_no is not null");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoEqualTo(String value) {
            addCriterion("property_cert_no =", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoNotEqualTo(String value) {
            addCriterion("property_cert_no <>", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoGreaterThan(String value) {
            addCriterion("property_cert_no >", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoGreaterThanOrEqualTo(String value) {
            addCriterion("property_cert_no >=", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoLessThan(String value) {
            addCriterion("property_cert_no <", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoLessThanOrEqualTo(String value) {
            addCriterion("property_cert_no <=", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoLike(String value) {
            addCriterion("property_cert_no like", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoNotLike(String value) {
            addCriterion("property_cert_no not like", value, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoIn(List<String> values) {
            addCriterion("property_cert_no in", values, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoNotIn(List<String> values) {
            addCriterion("property_cert_no not in", values, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoBetween(String value1, String value2) {
            addCriterion("property_cert_no between", value1, value2, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andPropertyCertNoNotBetween(String value1, String value2) {
            addCriterion("property_cert_no not between", value1, value2, "propertyCertNo");
            return (Criteria) this;
        }

        public Criteria andRoomCountIsNull() {
            addCriterion("room_count is null");
            return (Criteria) this;
        }

        public Criteria andRoomCountIsNotNull() {
            addCriterion("room_count is not null");
            return (Criteria) this;
        }

        public Criteria andRoomCountEqualTo(Integer value) {
            addCriterion("room_count =", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountNotEqualTo(Integer value) {
            addCriterion("room_count <>", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountGreaterThan(Integer value) {
            addCriterion("room_count >", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("room_count >=", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountLessThan(Integer value) {
            addCriterion("room_count <", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountLessThanOrEqualTo(Integer value) {
            addCriterion("room_count <=", value, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountIn(List<Integer> values) {
            addCriterion("room_count in", values, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountNotIn(List<Integer> values) {
            addCriterion("room_count not in", values, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountBetween(Integer value1, Integer value2) {
            addCriterion("room_count between", value1, value2, "roomCount");
            return (Criteria) this;
        }

        public Criteria andRoomCountNotBetween(Integer value1, Integer value2) {
            addCriterion("room_count not between", value1, value2, "roomCount");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaIsNull() {
            addCriterion("building_area is null");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaIsNotNull() {
            addCriterion("building_area is not null");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaEqualTo(BigDecimal value) {
            addCriterion("building_area =", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaNotEqualTo(BigDecimal value) {
            addCriterion("building_area <>", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaGreaterThan(BigDecimal value) {
            addCriterion("building_area >", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("building_area >=", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaLessThan(BigDecimal value) {
            addCriterion("building_area <", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("building_area <=", value, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaIn(List<BigDecimal> values) {
            addCriterion("building_area in", values, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaNotIn(List<BigDecimal> values) {
            addCriterion("building_area not in", values, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("building_area between", value1, value2, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andBuildingAreaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("building_area not between", value1, value2, "buildingArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaIsNull() {
            addCriterion("usable_area is null");
            return (Criteria) this;
        }

        public Criteria andUsableAreaIsNotNull() {
            addCriterion("usable_area is not null");
            return (Criteria) this;
        }

        public Criteria andUsableAreaEqualTo(BigDecimal value) {
            addCriterion("usable_area =", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaNotEqualTo(BigDecimal value) {
            addCriterion("usable_area <>", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaGreaterThan(BigDecimal value) {
            addCriterion("usable_area >", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("usable_area >=", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaLessThan(BigDecimal value) {
            addCriterion("usable_area <", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("usable_area <=", value, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaIn(List<BigDecimal> values) {
            addCriterion("usable_area in", values, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaNotIn(List<BigDecimal> values) {
            addCriterion("usable_area not in", values, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("usable_area between", value1, value2, "usableArea");
            return (Criteria) this;
        }

        public Criteria andUsableAreaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("usable_area not between", value1, value2, "usableArea");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundIsNull() {
            addCriterion("floors_above_ground is null");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundIsNotNull() {
            addCriterion("floors_above_ground is not null");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundEqualTo(Integer value) {
            addCriterion("floors_above_ground =", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundNotEqualTo(Integer value) {
            addCriterion("floors_above_ground <>", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundGreaterThan(Integer value) {
            addCriterion("floors_above_ground >", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundGreaterThanOrEqualTo(Integer value) {
            addCriterion("floors_above_ground >=", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundLessThan(Integer value) {
            addCriterion("floors_above_ground <", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundLessThanOrEqualTo(Integer value) {
            addCriterion("floors_above_ground <=", value, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundIn(List<Integer> values) {
            addCriterion("floors_above_ground in", values, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundNotIn(List<Integer> values) {
            addCriterion("floors_above_ground not in", values, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundBetween(Integer value1, Integer value2) {
            addCriterion("floors_above_ground between", value1, value2, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsAboveGroundNotBetween(Integer value1, Integer value2) {
            addCriterion("floors_above_ground not between", value1, value2, "floorsAboveGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundIsNull() {
            addCriterion("floors_below_ground is null");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundIsNotNull() {
            addCriterion("floors_below_ground is not null");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundEqualTo(Integer value) {
            addCriterion("floors_below_ground =", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundNotEqualTo(Integer value) {
            addCriterion("floors_below_ground <>", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundGreaterThan(Integer value) {
            addCriterion("floors_below_ground >", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundGreaterThanOrEqualTo(Integer value) {
            addCriterion("floors_below_ground >=", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundLessThan(Integer value) {
            addCriterion("floors_below_ground <", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundLessThanOrEqualTo(Integer value) {
            addCriterion("floors_below_ground <=", value, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundIn(List<Integer> values) {
            addCriterion("floors_below_ground in", values, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundNotIn(List<Integer> values) {
            addCriterion("floors_below_ground not in", values, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundBetween(Integer value1, Integer value2) {
            addCriterion("floors_below_ground between", value1, value2, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andFloorsBelowGroundNotBetween(Integer value1, Integer value2) {
            addCriterion("floors_below_ground not between", value1, value2, "floorsBelowGround");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("location like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("location not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andBuildYearIsNull() {
            addCriterion("build_year is null");
            return (Criteria) this;
        }

        public Criteria andBuildYearIsNotNull() {
            addCriterion("build_year is not null");
            return (Criteria) this;
        }

        public Criteria andBuildYearEqualTo(Date value) {
            addCriterionForJDBCDate("build_year =", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearNotEqualTo(Date value) {
            addCriterionForJDBCDate("build_year <>", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearGreaterThan(Date value) {
            addCriterionForJDBCDate("build_year >", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("build_year >=", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearLessThan(Date value) {
            addCriterionForJDBCDate("build_year <", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("build_year <=", value, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearIn(List<Date> values) {
            addCriterionForJDBCDate("build_year in", values, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearNotIn(List<Date> values) {
            addCriterionForJDBCDate("build_year not in", values, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("build_year between", value1, value2, "buildYear");
            return (Criteria) this;
        }

        public Criteria andBuildYearNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("build_year not between", value1, value2, "buildYear");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeIsNull() {
            addCriterion("register_time is null");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeIsNotNull() {
            addCriterion("register_time is not null");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeEqualTo(Date value) {
            addCriterion("register_time =", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeNotEqualTo(Date value) {
            addCriterion("register_time <>", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeGreaterThan(Date value) {
            addCriterion("register_time >", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("register_time >=", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeLessThan(Date value) {
            addCriterion("register_time <", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeLessThanOrEqualTo(Date value) {
            addCriterion("register_time <=", value, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeIn(List<Date> values) {
            addCriterion("register_time in", values, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeNotIn(List<Date> values) {
            addCriterion("register_time not in", values, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeBetween(Date value1, Date value2) {
            addCriterion("register_time between", value1, value2, "registerTime");
            return (Criteria) this;
        }

        public Criteria andRegisterTimeNotBetween(Date value1, Date value2) {
            addCriterion("register_time not between", value1, value2, "registerTime");
            return (Criteria) this;
        }

        public Criteria andDepartmentIsNull() {
            addCriterion("department is null");
            return (Criteria) this;
        }

        public Criteria andDepartmentIsNotNull() {
            addCriterion("department is not null");
            return (Criteria) this;
        }

        public Criteria andDepartmentEqualTo(String value) {
            addCriterion("department =", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotEqualTo(String value) {
            addCriterion("department <>", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentGreaterThan(String value) {
            addCriterion("department >", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentGreaterThanOrEqualTo(String value) {
            addCriterion("department >=", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLessThan(String value) {
            addCriterion("department <", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLessThanOrEqualTo(String value) {
            addCriterion("department <=", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLike(String value) {
            addCriterion("department like", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotLike(String value) {
            addCriterion("department not like", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentIn(List<String> values) {
            addCriterion("department in", values, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotIn(List<String> values) {
            addCriterion("department not in", values, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentBetween(String value1, String value2) {
            addCriterion("department between", value1, value2, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotBetween(String value1, String value2) {
            addCriterion("department not between", value1, value2, "department");
            return (Criteria) this;
        }

        public Criteria andPurposeIsNull() {
            addCriterion("purpose is null");
            return (Criteria) this;
        }

        public Criteria andPurposeIsNotNull() {
            addCriterion("purpose is not null");
            return (Criteria) this;
        }

        public Criteria andPurposeEqualTo(String value) {
            addCriterion("purpose =", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeNotEqualTo(String value) {
            addCriterion("purpose <>", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeGreaterThan(String value) {
            addCriterion("purpose >", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeGreaterThanOrEqualTo(String value) {
            addCriterion("purpose >=", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeLessThan(String value) {
            addCriterion("purpose <", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeLessThanOrEqualTo(String value) {
            addCriterion("purpose <=", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeLike(String value) {
            addCriterion("purpose like", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeNotLike(String value) {
            addCriterion("purpose not like", value, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeIn(List<String> values) {
            addCriterion("purpose in", values, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeNotIn(List<String> values) {
            addCriterion("purpose not in", values, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeBetween(String value1, String value2) {
            addCriterion("purpose between", value1, value2, "purpose");
            return (Criteria) this;
        }

        public Criteria andPurposeNotBetween(String value1, String value2) {
            addCriterion("purpose not between", value1, value2, "purpose");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buildings
     *
     * @mbg.generated do_not_delete_during_merge Sat Jul 13 14:41:29 CST 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buildings
     *
     * @mbg.generated Sat Jul 13 14:41:29 CST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}